/*
*
* Copyright (c) 2021 Darryl deHaan
* SPDX-License-Identifier: MIT
*
*/

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    chosen {
        zmk,matrix_transform = &default_transform;

        // zmk,matrix_transform = &five_column_transform;
    };
};

/ {
    keymap {
        compatible = "zmk,keymap";

        QWERTY {
            display-name = "QWERTY";

            bindings = <
&none  &kp Q           &kp W  &kp E         &kp R        &kp T              &kp Y    &kp U  &kp I      &kp O    &kp P     &kp BSPC
&none  &mt LEFT_GUI A  &mt LALT S  &mt LCTRL D         &mt LSHFT F        &kp G              &kp H    &kp J  &kp K      &kp L    &kp SEMI  &kp SQT
&none  &kp Z           &kp X  &kp C         &kp V        &kp B              &kp N    &kp M  &kp COMMA  &kp DOT  &kp FSLH  &kp ESC
                              &lt 5 ESCAPE  &lt 3 SPACE  &lt 1 BACKSPACE    &lt 2 TAB  &lt 4 ENTER  &lt 6 DEL
            >;
        };

        NUM {
            display-name = "NUMBER";

            bindings = <
&kp TAB     &kp N1        &kp N2        &kp N3        &kp N4        &kp N5          &kp COMMA    &kp N7    &kp N8    &kp N9     &kp EQUAL  &none
&bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &kp N0      &kp N4  &kp N5    &kp N6  &none  &none
&kp LSHFT   &trans        &trans        &trans        &trans        &trans          &kp DOT    &kp N1    &kp N2     &kp N3     &none  &trans
                        &kp ESCAPE  &kp SPACE  &kp BACKSPACE    &kp TAB  &kp ENTER  &kp DEL
        };

        NAV {
            display-name = "SYMBOL";

            bindings = <
&kp TAB    &kp EXCL  &kp AT  &kp HASH  &kp DLLR  &kp PRCNT    &kp CARET  &kp AMPS   &kp KP_MULTIPLY  &kp LPAR  &kp RPAR  &kp BSPC
&kp LCTRL  &trans    &trans  &trans    &trans    &trans       &kp MINUS  &kp EQUAL  &kp LBKT         &kp RBKT  &kp BSLH  &kp GRAVE
&kp LSHFT  &trans    &trans  &trans    &trans    &trans       &kp UNDER  &kp PLUS   &kp LBRC         &kp RBRC  &kp PIPE  &kp TILDE
          &kp ESCAPE  &kp SPACE  &kp BACKSPACE    &kp TAB  &kp ENTER  &kp DEL
            >;
        };

        SYMR {
            bindings = <
&none  &none  &none  &none  &none  &none    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&none  &none  &none  &none  &none  &none    &trans  &trans  &trans  &trans  &trans  &trans
          &kp ESCAPE  &kp SPACE  &kp BACKSPACE    &kp TAB  &kp ENTER  &kp DEL
            >;
        };

        SYML {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &none  &none  &none  &none  &none  &none
&trans  &trans  &trans  &trans  &trans  &trans   &none  &none  &none  &none  &none  &none
&trans  &trans  &trans  &trans  &trans  &trans   &none  &none  &none  &none  &none  &none
          &kp ESCAPE  &kp SPACE  &kp BACKSPACE    &kp TAB  &kp ENTER  &kp DEL
            >;
        };

        MEDIA {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &none  &none  &none  &none  &none  &none
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &none  &none  &none  &none  &none  &none
          &kp ESCAPE  &kp SPACE  &kp BACKSPACE    &kp TAB  &kp ENTER  &kp DEL
            >;
        };

        FUNC {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &none  &none  &none  &none  &none  &none
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &none  &none  &none  &none  &none  &none
          &kp ESCAPE  &kp SPACE  &kp BACKSPACE    &kp TAB  &kp ENTER  &kp DEL
            >;
        };
    };
};
