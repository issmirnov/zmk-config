/*
*
* Copyright (c) 2021 Darryl deHaan
* SPDX-License-Identifier: MIT
*
*/

#include <dt-bindings/zmk/mouse.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

/ {
    chosen {
        zmk,matrix_transform = &default_transform;

        // zmk,matrix_transform = &five_column_transform;
    };
};

&mt {
    // Shorten typing term to keep up with my speed

    tapping-term-ms = <150>;

    // If retro-tap is enabled, the tap behavior is triggered 
    // when releasing the hold-tap key if no other key was pressed in the meantime.

    retro-tap;

    // set hold-tap flavor to make home row mods work properly.

    flavor = "tap-preferred";
};

/ {
    keymap {
        compatible = "zmk,keymap";

        QWERTY {
            label = "QWERTY";
            display-name = "QWERTY";
            bindings = <
&kp ESCAPE  &kp Q           &kp W       &kp E         &kp R        &kp T              &kp Y      &kp U        &kp I        &kp O           &kp P           &kp PRINTSCREEN
&caps_word  &mt LEFT_GUI A  &mt LALT S  &mt LCTRL D   &mt LSHFT F  &kp G              &kp H      &mt LSHFT J  &mt LCTRL K  &mt LEFT_ALT L  &mt LCMD SLASH  &kp LG(SPACE)
&kp ESCAPE  &kp Z           &kp X       &kp C         &kp V        &kp B              &kp N      &kp M        &kp DOT      &kp COMMA       &kp QUESTION    &kp COLON
                                        &lt 5 ESCAPE  &lt 3 SPACE  &lt 1 BACKSPACE    &lt 2 TAB  &lt 4 ENTER  &lt 6 DEL
            >;
        };

        NUM {
            label = "NUMP";
            display-name = "NUMBER";
            bindings = <
&none  &kp COLON  &kp SLASH  &kp COMMA   &kp DOT        &kp ASTRK        &kp COMMA  &kp N7     &kp N8   &kp N9  &kp EQUAL  &none
&none  &kp LGUI   &kp LALT   &kp LCTRL   &kp LSHFT      &none            &kp N0     &kp N4     &kp N5   &kp N6  &none      &none
&none  &none      &none      &none       &kp LG(LSHFT)  &none            &kp DOT    &kp N1     &kp N2   &kp N3  &none      &to 7
                             &kp ESCAPE  &kp SPACE      &kp BACKSPACE    &kp TAB    &kp ENTER  &kp DEL
            >;
        };

        NAV {
            label = "NAVI";
            display-name = "NAVI";
            bindings = <
&none  &none     &none     &none       &none             &none            &kp CAPSLOCK  &kp K_PASTE  &kp UP_ARROW  &kp K_CUT  &kp K_UNDO  &none
&none  &kp LGUI  &kp LALT  &kp LCTRL   &kp LSHFT         &none            &kp INS       &kp LEFT     &kp DOWN      &kp RIGHT  &kp K_COPY  &none
&none  &none     &none     &none       &kp LS(LEFT_GUI)  &none            &mkp MB4      &mkp LCLK    &mkp MB3      &mkp RCLK  &none       &none
                           &kp ESCAPE  &kp SPACE         &kp BACKSPACE    &kp TAB       &kp ENTER    &kp DEL
            >;
        };

        SYMR {
            label = "SYMR";
            display-name = "SYMR";
            bindings = <
&none  &none     &none     &none       &none      &none            &kp STAR  &kp EXCL      &kp PIPE   &kp PERCENT    &kp PLUS           &none
&none  &kp LGUI  &kp LALT  &kp LCTRL   &kp LSHFT  &none            &kp HASH  &kp KP_EQUAL  &kp COLON  &kp SEMICOLON  &kp APOS           &none
&none  &none     &none     &none       &none      &none            &kp AMPS  &kp QUESTION  &kp SLASH  &kp BACKSLASH  &kp DOUBLE_QUOTES  &none
                           &kp ESCAPE  &kp SPACE  &kp BACKSPACE    &kp TAB   &kp ENTER     &kp DEL
            >;
        };

        SYML {
            label = "SYML";
            bindings = <
&none  &kp MINUS      &kp AT            &kp LEFT_BRACE        &kp RIGHT_BRACE        &kp GRAVE        &none    &none      &none      &none     &none     &none
&none  &kp CARET      &kp UNDERSCORE    &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp DOLLAR       &none    &kp LSHFT  &kp LCTRL  &kp LALT  &kp LGUI  &none
&none  &kp LESS_THAN  &kp GREATER_THAN  &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &kp TILDE        &none    &none      &none      &none     &none     &none
                                        &kp ESCAPE            &kp SPACE              &kp BACKSPACE    &kp TAB  &kp ENTER  &kp DEL
            >;
        };

        MEDIA {
            label = "MEDIA";
            bindings = <
&none  &none       &kp C_PAUSE   &kp C_PLAY     &kp C_STOP  &none            &none    &none      &none      &none     &none     &none
&none  &kp C_PREV  &kp C_VOL_DN  &kp C_VOL_UP   &kp C_NEXT  &none            &none    &kp LSHFT  &kp LCTRL  &kp LALT  &kp LGUI  &none
&none  &kp END     &kp PG_UP     &kp PAGE_DOWN  &kp HOME    &none            &none    &none      &none      &none     &none     &none
                                 &kp ESCAPE     &kp SPACE   &kp BACKSPACE    &kp TAB  &kp ENTER  &kp DEL
            >;
        };

        FUNC {
            label = "FUNC";
            bindings = <
&none  &kp F12  &kp F7  &kp F8      &kp F9     &none            &none       &none         &none         &none         &none         &none
&none  &kp F11  &kp F4  &kp F5      &kp F6     &none            &none       &kp LSHFT     &kp LCTRL     &kp LALT      &kp LGUI      &none
&none  &kp F10  &kp F1  &kp F2      &kp F3     &none            &bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4
                        &kp ESCAPE  &kp SPACE  &kp BACKSPACE    &kp TAB     &kp ENTER     &kp DEL
            >;
        };

        GAME {
            label = "GAME";
            bindings = <
&kp TAB           &kp Q  &kp W  &kp E    &kp R      &kp T              &kp Y    &kp U    &kp I    &kp O      &kp P          &kp ESCAPE
&kp LEFT_SHIFT    &kp A  &kp S  &kp D    &kp F      &kp G              &kp H    &kp J    &kp K    &kp L      &kp FSLH       &kp LEFT_GUI
&kp LEFT_CONTROL  &kp Z  &kp X  &kp C    &kp V      &kp B              &kp N    &kp M    &kp DOT  &kp COMMA  &kp LS(QMARK)  &to 0
                                &kp ESC  &kp SPACE  &lt 1 BACKSPACE    &kp TAB  &kp RET  &none
            >;
        };
    };
};
